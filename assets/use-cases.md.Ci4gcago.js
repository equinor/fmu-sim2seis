import{_ as i,c as s,o as t,ae as a}from"./chunks/framework.xmna4E1W.js";const u=JSON.parse('{"title":"Why sim2seis?","description":"","frontmatter":{},"headers":[],"relativePath":"use-cases.md","filePath":"use-cases.md"}'),o={name:"use-cases.md"};function r(l,e,c,n,d,m){return t(),s("div",null,e[0]||(e[0]=[a('<h1 id="why-sim2seis" tabindex="-1">Why <code>sim2seis</code>? <a class="header-anchor" href="#why-sim2seis" aria-label="Permalink to &quot;Why `sim2seis`?&quot;">​</a></h1><p>The FMU <code>sim2seis</code> (<strong>sim</strong>ulator to <strong>seis</strong>mic) workflow calculates seismic parameters and synthetic seismic based on reservoir simulation results. Typical use cases include:</p><ul><li>Feasibility studies for 4D seismic</li><li>History matching to 4D seismic data</li><li>Assisting the interpretation of 4D seismic data</li></ul><p>The following steps are typically undertaken when calculating synthetic seismic from reservoir simulation results:</p><ol><li>A field-specific <a href="./static-and-dynamic-input.html">petro-elastic model (PEM)</a> is used to calculate elastic parameters in each grid cell. Static and dynamic parameters from the geomodel and simulation model serve as inputs to the PEM.</li><li><a href="./seismic-forward.html">Synthetic seismic cubes</a> are generated based on the input from the two steps above and a seismic wavelet.</li><li><a href="./time-depth-conversion.html">Depth-to-time conversion</a> is performed on the synthetic seismic cube to prepare for relative seismic inversion.</li><li>Optional: <a href="./relative-seismic-inversion.html">relative seismic inversion</a> is applied to the time-converted synthetic seismic cubes.</li><li>Time shift estimation is conducted based on the synthetic seismic differences.</li><li>Various results can then be extracted, such as: <ul><li><a href="./attribute-maps.html">attribute maps</a> from the synthetic seismic and relative seismic inversion. The list of possible attributes can be found in <a href="https://xtgeo.readthedocs.io/en/stable/api-cubes.html#xtgeo.Cube.compute_attributes_in_window" target="_blank" rel="noreferrer">xtgeo.cubes</a>.</li><li>time shift change maps</li></ul></li></ol><p><code>sim2seis</code> settings are read from a <code>YAML</code> file. The section links above discuss the parts of the YAML file that control the matching aspect of the <code>sim2seis</code> workflow. Lines in the configuration YAML file that are commented indicate default values, which are typically preferred, such as file names, directory names, etc.</p><p>There are two related commands that are optional within the <code>sim2seis</code> workflow:</p><ol><li><a href="./observed-data.html">Observed data processing</a></li><li><a href="./clean-up.html">Clean-up of intermediate files</a></li></ol><p>Neither of these commands is usually included when <code>sim2seis</code> is run from <code>ert</code>, but they can be in certain cases. Both have command-line interfaces, which are explained in the links above.</p><h3 id="ert-run" tabindex="-1"><code>ERT</code> Run <a class="header-anchor" href="#ert-run" aria-label="Permalink to &quot;`ERT` Run&quot;">​</a></h3><p>The steps from <code>PEM</code> to <code>attribute_maps</code> are based on results from previous steps in the <code>sim2seis</code>workflow, so they must be run in a fixed sequence in <code>ert</code>. The minimum mandatory sequence is:</p><ol><li>PEM</li><li>Seismic forward modelling</li><li>Amplitude maps</li></ol><p>If relative acoustic impedance is also included, the sequence becomes:</p><ol><li>PEM</li><li>Seismic forward modelling</li><li>Relative acoustic impedance</li><li>Amplitude maps</li><li>Relai maps</li></ol><p>A setup file for an <code>ert</code> job is shown in <a href="./ert-configuration.html"><code>ert</code> configuration</a>.</p>',15)]))}const p=i(o,[["render",r]]);export{u as __pageData,p as default};
